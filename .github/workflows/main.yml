on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - src/sample-application/**
  pull_request:
    branches: [ main ]

name: AWS ECR push

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      run: |
        # Build a docker container and push it to ECR 
        docker build -t asp-net-app ./src/sample-application/AspNetInAction/
        docker tag asp-net-app:latest ${{secrets.ECR_REGISTRY}}/asp-net-app:${{ github.sha }}
        docker push ${{secrets.ECR_REGISTRY}}/asp-net-app:${{ github.sha }}

    - name: Deploy to Kubernetes cluster                                                                            
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        ECR_REGISTRY: ${{secrets.ECR_REGISTRY}}
        IMAGE_TAG: ${{ github.sha }}
      with:
        args: set image deployment/asp-net-app-github asp-net-app=$ECR_REGISTRY/asp-net-app:$IMAGE_TAG